paths:  
  organizations-{organizationId}-projects:
    get:
      tags:
        - projects
      description: |
        List projects
      operationId: list_projects
      security:
        - token: []
      parameters:
        - name: organizationId
          in: path
          required: true
          description: The id of the organization to retrieve
          schema:
            type: string
            format: OrganizationId
      responses:
        '200':
          description: returns all projects under the given organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProjectsResponse'
        '404':
          description: organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - projects
      description: |
        Creates a new project
      operationId: create_project
      security:
        - token: []
      parameters:
        - name: organizationId
          in: path
          required: true
          description: The id of the organization to retrieve
          schema:
            type: string
            format: OrganizationId
      requestBody:
        description: describes a new project
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
      responses:
        '200':
          description: project was created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjectResponse'
        '400':
          description: invalid content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: project limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails' 
  
  organizations-{organizationId}-projects-{projectId}:
    get:
      tags:
        - projects
      description: |
        Get project
      operationId: get_project
      security:
        - token: []
      parameters:
        - name: organizationId
          in: path
          required: true
          description: The id of the organization to retrieve
          schema:
            type: string
            format: OrganizationId
        - name: projectId
          in: path
          required: true
          description: The id of the project to retrieve
          schema:
            type: string
            format: ProjectId
      responses:
        '200':
          description: returns the given project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProjectResponse'
        '404':
          description: project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - projects
      description: |
        Deletes project
      operationId: delete_project
      security:
        - token: []
      parameters:
        - name: organizationId
          in: path
          required: true
          description: The id of the organization to delete
          schema:
            type: string
            format: OrganizationId
        - name: projectId
          in: path
          required: true
          description: The id of the project to delete
          schema:
            type: string
            format: ProjectId
      responses:
        '204':
          description: the project was deleted successfully          
        '404':
          description: project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    update:
      tags:
        - projects
      description: |
        Updates a project
      operationId: update_project
      security:
        - token: []
      parameters:
        - name: organizationId
          in: path
          required: true
          description: The id of the organization to delete
          schema:
            type: string
            format: OrganizationId
        - name: projectId
          in: path
          required: true
          description: The id of the project to delete
          schema:
            type: string
            format: ProjectId
      requestBody:
        description: describes a new project
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequest'
      responses:
        '204':
          description: the project was updated successfully          
        '400':
          description: invalid content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'

components:  
  schemas:   
    CreateProjectRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string        

    CreateProjectResponse:
      type: object
      required:
        - organization
      properties:
        id:
          type: string 
          format: ProjectId

    GetProjectResponse:
      type: object
      required:
        - project
      properties:
        project:
          $ref: '#/components/schemas/Project'
          
    ListProjectsResponse:
      type: object
      required:
        - projects
      properties:
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    
    NewProject:
      type: object
      required:
        - name
      properties:
        name:
          type: string        
    
    ProblemDetails:
      $ref: '../common/ProblemDetails.yaml#/components/schemas/ProblemDetails'

    Project:
      type: object
      required:
      - created
      - id
      - name
      - organizationId
      properties:
        created:
          type: string
          format: date-time 
        id:
          type: string
          format: ProjectId
        name:
          type: string
        organizationId:
          type: string
          format: OrganizationId
    UpdateProjectRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string        